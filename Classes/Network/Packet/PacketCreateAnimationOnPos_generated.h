// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_PACKETCREATEANIMATIONONPOS_PACKETS_H_
#define FLATBUFFERS_GENERATED_PACKETCREATEANIMATIONONPOS_PACKETS_H_

#include "flatbuffers/flatbuffers.h"

namespace packets {

struct PacketCreateAnimationOnPos;

struct PacketCreateAnimationOnPos FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_NAME = 4,
    VT_X = 6,
    VT_Y = 8
  };
  const flatbuffers::String *name() const { return GetPointer<const flatbuffers::String *>(VT_NAME); }
  float x() const { return GetField<float>(VT_X, 0); }
  float y() const { return GetField<float>(VT_Y, 0); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, VT_NAME) &&
           verifier.Verify(name()) &&
           VerifyField<float>(verifier, VT_X) &&
           VerifyField<float>(verifier, VT_Y) &&
           verifier.EndTable();
  }
};

struct PacketCreateAnimationOnPosBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_name(flatbuffers::Offset<flatbuffers::String> name) { fbb_.AddOffset(PacketCreateAnimationOnPos::VT_NAME, name); }
  void add_x(float x) { fbb_.AddElement<float>(PacketCreateAnimationOnPos::VT_X, x, 0); }
  void add_y(float y) { fbb_.AddElement<float>(PacketCreateAnimationOnPos::VT_Y, y, 0); }
  PacketCreateAnimationOnPosBuilder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  PacketCreateAnimationOnPosBuilder &operator=(const PacketCreateAnimationOnPosBuilder &);
  flatbuffers::Offset<PacketCreateAnimationOnPos> Finish() {
    auto o = flatbuffers::Offset<PacketCreateAnimationOnPos>(fbb_.EndTable(start_, 3));
    return o;
  }
};

inline flatbuffers::Offset<PacketCreateAnimationOnPos> CreatePacketCreateAnimationOnPos(flatbuffers::FlatBufferBuilder &_fbb,
   flatbuffers::Offset<flatbuffers::String> name = 0,
   float x = 0,
   float y = 0) {
  PacketCreateAnimationOnPosBuilder builder_(_fbb);
  builder_.add_y(y);
  builder_.add_x(x);
  builder_.add_name(name);
  return builder_.Finish();
}

inline const packets::PacketCreateAnimationOnPos *GetPacketCreateAnimationOnPos(const void *buf) { return flatbuffers::GetRoot<packets::PacketCreateAnimationOnPos>(buf); }

inline bool VerifyPacketCreateAnimationOnPosBuffer(flatbuffers::Verifier &verifier) { return verifier.VerifyBuffer<packets::PacketCreateAnimationOnPos>(); }

inline void FinishPacketCreateAnimationOnPosBuffer(flatbuffers::FlatBufferBuilder &fbb, flatbuffers::Offset<packets::PacketCreateAnimationOnPos> root) { fbb.Finish(root); }

}  // namespace packets

#endif  // FLATBUFFERS_GENERATED_PACKETCREATEANIMATIONONPOS_PACKETS_H_
