// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_PACKETRENDERSKILLSET_PACKETS_H_
#define FLATBUFFERS_GENERATED_PACKETRENDERSKILLSET_PACKETS_H_

#include "flatbuffers/flatbuffers.h"

#include "PACKETRenderSkill_generated.h"

namespace packets {

struct PacketRenderSkill;

}  // namespace packets

namespace packets {

struct PacketRenderSkillSet;

struct PacketRenderSkillSet FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_SKILLS = 4
  };
  const flatbuffers::Vector<flatbuffers::Offset<packets::PacketRenderSkill>> *skills() const { return GetPointer<const flatbuffers::Vector<flatbuffers::Offset<packets::PacketRenderSkill>> *>(VT_SKILLS); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, VT_SKILLS) &&
           verifier.Verify(skills()) &&
           verifier.VerifyVectorOfTables(skills()) &&
           verifier.EndTable();
  }
};

struct PacketRenderSkillSetBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_skills(flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<packets::PacketRenderSkill>>> skills) { fbb_.AddOffset(PacketRenderSkillSet::VT_SKILLS, skills); }
  PacketRenderSkillSetBuilder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  PacketRenderSkillSetBuilder &operator=(const PacketRenderSkillSetBuilder &);
  flatbuffers::Offset<PacketRenderSkillSet> Finish() {
    auto o = flatbuffers::Offset<PacketRenderSkillSet>(fbb_.EndTable(start_, 1));
    return o;
  }
};

inline flatbuffers::Offset<PacketRenderSkillSet> CreatePacketRenderSkillSet(flatbuffers::FlatBufferBuilder &_fbb,
   flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<packets::PacketRenderSkill>>> skills = 0) {
  PacketRenderSkillSetBuilder builder_(_fbb);
  builder_.add_skills(skills);
  return builder_.Finish();
}

inline const packets::PacketRenderSkillSet *GetPacketRenderSkillSet(const void *buf) { return flatbuffers::GetRoot<packets::PacketRenderSkillSet>(buf); }

inline bool VerifyPacketRenderSkillSetBuffer(flatbuffers::Verifier &verifier) { return verifier.VerifyBuffer<packets::PacketRenderSkillSet>(); }

inline void FinishPacketRenderSkillSetBuffer(flatbuffers::FlatBufferBuilder &fbb, flatbuffers::Offset<packets::PacketRenderSkillSet> root) { fbb.Finish(root); }

}  // namespace packets

#endif  // FLATBUFFERS_GENERATED_PACKETRENDERSKILLSET_PACKETS_H_
